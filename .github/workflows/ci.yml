name: Master CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Collect info
      id: vars
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        echo "::set-output name=image::${{github.event.repository.name}}"
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2      
    - uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Setup JBang
      uses: jbangdev/setup-jbang@main
    - name: Add hosts to /etc/hosts
      run: |
        sudo echo "127.0.0.1 scytta-test.com" | sudo tee -a /etc/hosts
        sudo echo "127.0.0.1 web.scytta-test.com" | sudo tee -a /etc/hosts
        sudo echo "127.0.0.1 cloud.scytta-test.com" | sudo tee -a /etc/hosts
        sudo echo "127.0.0.1 mock.localhost.com" | sudo tee -a /etc/hosts
        sudo echo "127.0.0.1 postgres.localhost.com" | sudo tee -a /etc/hosts
        sudo echo "127.0.0.1 redis.localhost.com" | sudo tee -a /etc/hosts
    - run: npm ci
      working-directory: ./integration-test

      
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}    

    - name: Build
      uses: docker/build-push-action@v4
      with:
        context: .
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true
        tag: ${{steps.vars.outputs.image}}:${{steps.vars.outputs.sha_short}}

    - name: Inspect
      run: docker image ls
      
    - name: Integartion test
      run: npm run regression
      working-directory: ./integration-test

    - name: Test Reports
      uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: Test Reports
        path: | 
          ./integration-test/target/karate-reports/
          ./integration-test/target/karate.log

    #- name: Publish image
    #  run: docker push 
